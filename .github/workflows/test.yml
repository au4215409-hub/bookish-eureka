name: WhatsApp Automation with MuMu Emulator

on:
  workflow_dispatch: # Manual trigger only

jobs:
  whatsapp-automation:
    runs-on: windows-latest
    timeout-minutes: 3600 # 60 hour maximum

    steps:
    - name: Create RDP User with Password
      run: |
        Write-Host "=== CREATING RDP USER ==="
        $password = "Jalingo@1"
        $securePassword = ConvertTo-SecureString $password -AsPlainText -Force
        
        # Create new user
        New-LocalUser -Name "RDPUser" -Password $securePassword -AccountNeverExpires
        
        # Add to administrators and remote desktop users groups
        Add-LocalGroupMember -Group "Administrators" -Member "RDPUser"
        Add-LocalGroupMember -Group "Remote Desktop Users" -Member "RDPUser"
        
        Write-Host "‚úÖ RDP User created: RDPUser"
        Write-Host "‚úÖ Password: $password"

    - name: Enable RDP
      run: |
        Write-Host "=== ENABLING RDP ==="
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0 -Force
        netsh advfirewall firewall set rule group="remote desktop" new enable=Yes
        Restart-Service -Name TermService -Force
        Write-Host "‚úÖ RDP enabled"

    - name: Create WhatsApp Directory
      run: |
        Write-Host "=== CREATING WHATSAPP DIRECTORY ==="
        $whatsappDir = "C:\Users\RDPUser\Desktop\whatsapp"
        New-Item -ItemType Directory -Force -Path $whatsappDir
        Write-Host "‚úÖ Directory created: $whatsappDir"

    - name: Download repository files
      run: |
        Write-Host "=== DOWNLOADING REPOSITORY FILES ==="
        $whatsappDir = "C:\Users\RDPUser\Desktop\whatsapp"
        
        # Download the entire repository
        Invoke-WebRequest -Uri "https://github.com/binahmad362/stunning-carnival/archive/refs/heads/main.zip" -OutFile "$whatsappDir\repo.zip"
        Expand-Archive -Path "$whatsappDir\repo.zip" -DestinationPath "$whatsappDir\temp" -Force
        
        # Move all contents to main directory
        Get-ChildItem "$whatsappDir\temp\stunning-carnival-main\*" | Move-Item -Destination $whatsappDir -Force
        
        # Clean up
        Remove-Item "$whatsappDir\temp" -Recurse -Force
        Remove-Item "$whatsappDir\repo.zip" -Force
        
        Write-Host "‚úÖ Repository files downloaded"

    - name: Download MuMu Files
      run: |
        Write-Host "=== DOWNLOADING MUMU FILES ==="
        $whatsappDir = "C:\Users\RDPUser\Desktop\whatsapp"
        
        Invoke-WebRequest -Uri "https://a11.gdl.netease.com/MuMu_5.0.4_gw-win-download_all_1756402042.exe?n=MuMu_5.0.4_r9kVqqC.exe" -OutFile "$whatsappDir\MuMu_Installer.exe"
        Write-Host "‚úÖ MuMu Installer downloaded"
        
        Invoke-WebRequest -Uri "https://github.com/binahmad362/glowing-guide/raw/refs/heads/main/Android%20Device.mumudata?download=" -OutFile "$whatsappDir\Android_Device.mumudata"
        Write-Host "‚úÖ Android Device data downloaded"

    - name: Install Python Dependencies
      run: |
        Write-Host "=== INSTALLING PYTHON DEPENDENCIES ==="
        pip install pyautogui keyboard requests opencv-python pillow
        Write-Host "‚úÖ Python dependencies installed"

    - name: List directory contents
      run: |
        Write-Host "=== LISTING WHATSAPP DIRECTORY CONTENTS ==="
        $whatsappDir = "C:\Users\RDPUser\Desktop\whatsapp"
        Write-Host "Files in whatsapp directory:"
        Get-ChildItem -Path $whatsappDir | Format-Table Name, Length

    - name: Download Cloudflared
      run: |
        Write-Host "=== DOWNLOADING CLOUDFLARED ==="
        Invoke-WebRequest -Uri "https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-windows-amd64.exe" -OutFile "cloudflared.exe"
        Write-Host "‚úÖ Cloudflared downloaded"

    - name: Start Cloudflare Tunnel and Run Script
      run: |
        Write-Host "=== STARTING CLOUDFLARE TUNNEL ==="
        Write-Host "üéâ ENVIRONMENT READY! üéâ"
        Write-Host ""
        Write-Host "üìã RDP CONNECTION DETAILS:"
        Write-Host "   Username: RDPUser"
        Write-Host "   Password: Jalingo@1"
        Write-Host "   Use the Cloudflared URL below to connect via RDP"
        Write-Host ""
        Write-Host "üöÄ AUTOMATION STATUS:"
        Write-Host "   ‚úÖ RDP user created with password"
        Write-Host "   ‚úÖ WhatsApp directory created at C:\Users\RDPUser\Desktop\whatsapp"
        Write-Host "   ‚úÖ Repository files downloaded (including script.py)"
        Write-Host "   ‚úÖ MuMu files downloaded"
        Write-Host "   ‚úÖ Python dependencies installed"
        Write-Host ""
        Write-Host "üåê CLOUDFLARE TUNNEL STARTING..."
        Write-Host "   Your RDP connection URL will appear below:"
        Write-Host "   This will keep running for 6 hours"
        Write-Host ""
        
        # Start cloudflared tunnel in background
        Start-Process -FilePath ".\cloudflared.exe" -ArgumentList "tunnel --url rdp://localhost:3389" -NoNewWindow
        
        # Wait for tunnel to start
        Start-Sleep -Seconds 10
        
        # Run the script.py from the repository as RDPUser
        Write-Host "=== RUNNING SCRIPT.PY FROM REPOSITORY ==="
        $whatsappDir = "C:\Users\RDPUser\Desktop\whatsapp"
        
        # Check if script.py exists
        if (Test-Path "$whatsappDir\script.py") {
            Write-Host "‚úÖ Found script.py - executing..."
            cd $whatsappDir
            python script.py
        } else {
            Write-Host "‚ùå script.py not found! Available files:"
            Get-ChildItem -Path $whatsappDir | Format-Table Name
        }
        
        Write-Host "=== SCRIPT EXECUTION COMPLETED ==="
        Write-Host "Cloudflared tunnel will remain active for 6 hours"
        Write-Host "You can connect via RDP using:"
        Write-Host "  Username: RDPUser"
        Write-Host "  Password: Jalingo@1"
        Write-Host "  URL: (see Cloudflared output above)"
        
        # Keep the workflow alive for 6 hours
        Write-Host "Waiting for 6 hours (21600 seconds)..."
        Start-Sleep -Seconds 21600

    - name: Upload results as artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: whatsapp-automation-results
        path: C:\Users\RDPUser\Desktop\whatsapp\
        retention-days: 1
